package news
import (
	"NTG/internal/database"
)
templ newsContent(language string, phrases map[string]map[string]string, articles []database.NewsArticle, categories []string, currentPage, totalPages int, currentCategory, search, startDateStr, endDateStr string, pageURLs map[int]string) {
	<main class="container-fluid my-4 my-md-5">
		<!-- Mobile Filter Toggle -->
		<div class="row d-lg-none mb-3">
			<div class="col-12">
				<button class="btn btn-danger w-100 d-flex align-items-center justify-content-center" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
					<i class="fas fa-filter me-2"></i>
					{ phrases["filters"]["title"] }
					<i class="fas fa-chevron-down ms-2"></i>
				</button>
			</div>
		</div>

		<div class="row g-3 g-md-4">
			<!-- Filters Sidebar - Collapsible on mobile -->
			<div class="col-lg-3">
				<div class="collapse d-lg-block" id="filterCollapse">
					<div class="card shadow-sm sticky-lg-top" style="top: 20px;">
						<div class="card-header bg-danger text-white">
							<h5 class="mb-0"><i class="fas fa-filter me-2"></i>{ phrases["filters"]["title"] }</h5>
						</div>
						<div class="card-body">
							<form method="GET" action="" id="newsFilterForm">
								<!-- Date Filter -->
								<div class="mb-3 p-3 bg-light rounded">
									<h6 class="mb-2">{ phrases["filters"]["date_title"] }</h6>
									<div class="mb-2">
										<label for="dateFrom" class="form-label small">{ phrases["filters"]["date_from"] }</label>
										<input type="date" class="form-control form-control-sm" id="dateFrom" name="start_date" value={ startDateStr }/>
									</div>
									<div class="mb-2">
										<label for="dateTo" class="form-label small">{ phrases["filters"]["date_to"] }</label>
										<input type="date" class="form-control form-control-sm" id="dateTo" name="end_date" value={ endDateStr }/>
									</div>
								</div>
								<!-- Search Filter -->
								<div class="mb-3">
									<h6 class="mb-2">{ phrases["filters"]["search_title"] }</h6>
									<input type="text" class="form-control form-control-sm" placeholder={ phrases["filters"]["search_placeholder"] } id="searchInput" name="search" value={ search }/>
								</div>
								<!-- Category Filter -->
								<div class="mb-3">
									<h6 class="mb-2">{ phrases["filters"]["category_title"] }</h6>
									<select class="form-select form-select-sm" name="category">
										<option value="">{ phrases["filters"]["category_all"] }</option>
										for _, category := range categories {
											if category == currentCategory {
												<option value={ category } selected>{ phrases["categories"]["categories_" + category] }</option>
											} else {
												<option value={ category }>{ phrases["categories"]["categories_" + category] }</option>
											}
										}
									</select>
								</div>
								<div class="d-grid gap-2">
									<button type="submit" class="btn btn-danger btn-sm">{ phrases["filters"]["apply_button"] }</button>
									<button type="button" class="btn btn-outline-secondary btn-sm" onclick="resetFilters()">{ phrases["filters"]["reset_button"] }</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>

			<!-- News Content -->
			<div class="col-lg-9">
				<div class="news-scroll-container border rounded p-2 p-md-3">
					@newsGrid(language, phrases, articles)
				</div>
				
				<!-- Pagination - Now properly positioned -->
				if totalPages > 1 {
					@pagination(phrases, currentPage, totalPages, pageURLs)
				}
			</div>
		</div>
	</main>
	<script>
		function resetFilters() {
			document.getElementById('dateFrom').value = '';
			document.getElementById('dateTo').value = '';
			document.getElementById('searchInput').value = '';
			document.querySelector('select[name="category"]').value = '';
			document.getElementById('newsFilterForm').submit();
		}

		// Auto-close mobile filters after applying on small screens
		document.addEventListener('DOMContentLoaded', function() {
			const filterForm = document.getElementById('newsFilterForm');
			const filterCollapse = document.getElementById('filterCollapse');
			
			if (filterForm && window.innerWidth < 992) {
				filterForm.addEventListener('submit', function() {
					// Close the collapse after a short delay to allow form submission
					setTimeout(() => {
						const bsCollapse = new bootstrap.Collapse(filterCollapse);
						bsCollapse.hide();
					}, 100);
				});
			}
		});
	</script>
}
